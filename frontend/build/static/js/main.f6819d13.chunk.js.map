{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","oders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","listUsers","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","messgae","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","classname","onclick","deliverOrder","OrderListScreen","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setBrand","setImage","setCategory","setCountInStock","setDescription","uploading","setUploading","uplaodFileHandler","file","files","formData","FormData","append","updpateProduct","File","custom","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f6819d13.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productDetailsReducer,\n  productListReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\n\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","//product list reducer, will handle state for product list on the homepage\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\n//product details reducer, will handle state for product list on the homepage\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state }\n\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n\n    case PRODUCT_CREATE_RESET:\n      return {}\n\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n\n    default:\n      return state\n  }\n}\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n\n    default:\n      return state\n  }\n}\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCEESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCEESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCEESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCEESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCEESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCEESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_PRODUCT_TOP_SUCCEESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_PRODUCT_TOP_FAIL'\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_LOGOUT:\n      return {}\n\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_DETAILS_RESET:\n      return { user: {} }\n\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_LIST_RESET:\n      return { users: [] }\n\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n\n    case ORDER_PAY_RESET:\n      return {}\n\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n\n    case ORDER_DELIVER_RESET:\n      return {}\n\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n\n    case ORDER_LIST_MY_RESET:\n      return { oders: [] }\n\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import React, { useState } from 'react'\n\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type='text'\n        name='q'\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder='Search Product...'\n        className='mr-sm-2 ml-sm-5'\n      ></Form.Control>\n      <Button type='submit' variant='outline-success' className='p-2'>\n        Search\n      </Button>\n    </Form>\n  )\n}\n\nexport default SearchBox\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from '../constants/userConstants'\nimport axios from 'axios'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Logout action\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n}\n\n//Register action\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    })\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>ProShop</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i>Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i>Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from \"react-bootstrap\"\n\nconst Footer = () => {\n  return (\n  <footer>\n    <Container>\n      <Row>\n        <Col className='text-center py-3'>\n          Copyright &copy; ProShop\n        </Col>\n      </Row>\n    </Container>\n  </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Rating = ({ value, text, color }) => {\n    return (\n        <div className='rating'>\n            <span>\n                <i style={{ color }} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color }} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color }} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color }} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color }} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n    <span>{text && text}</span>\n        </div>\n    )\n}\n\nRating.defaultProps ={\n    color: '#f8e825'\n}\n\nRating.propTypes = {\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ( {product} ) => {\n    return (\n        <Card className='my-3 p-3 rounded'>\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} variant='top' />\n            </Link>\n\n            <Card.Body>\n            <Link to={`/product/${product._id}`}>\n            <Card.Title as='div'><strong>{product.name}</strong></Card.Title>\n            </Link>\n            <Card.Text as='div'>\n                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n            </Card.Text>\n                <Card.Text as='h3'>${product.price}</Card.Text>\n            </Card.Body> \n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={ variant }>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner \n        animation='border' \n        role='status' \n        style={{ \n            width: '100px', \n            height: '100px', \n            margin: 'auto', \n            display: 'block' \n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants.js'\n\nexport const listProducts =\n  (keyword = '', pageNumber = '') =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_REQUEST })\n\n      const { data } = await axios.get(\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n      )\n\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }\n\n//Product details\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.messgae,\n    })\n  }\n}\n\n//Delete product\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Create Product\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Update Product\nexport const updpateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//Create Product Review\nexport const createProductReview =\n  (productId, review) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\n      })\n\n      const {\n        userLogin: { userInfo },\n      } = getState()\n\n      const config = {\n        headers: {\n          'content-type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n\n      await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\n      })\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel pause='hover' className='bg-dark'>\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className='carousel-caption'>\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\nMeta.defaultProps = {\n  title: 'Welcome to ProShop',\n  description: 'we sell the best products for cheap prices',\n  keywords: 'electronics, buy electronics, cheap electronics',\n}\nexport default Meta\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to='/' className='btn btn-light'>\n          Go Back\n        </Link>\n      )}\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const { success: successProductReview, error: errorProductReview } =\n    productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert('Review Submitted!')\n      setRating(0)\n      setComment('')\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n    dispatch(listProductDetails(match.params.id))\n  }, [dispatch, match, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Home\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h2>{product.name}</h2>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a customer review</h2>\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type='submit' variant='primary'>\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>Sign in</Link> to write a review{' '}\n                      {''}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAdress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n\n    const productId = match.params.id\n    \n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if(productId){\n            dispatch(addToCart(productId, qty))\n        }else{\n\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? <Message>Your cart is empty<Link to='/'> Go Back </Link></Message> :(\n                    <ListGroup variant='flush'>\n                        {cartItems.map(item => (\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>\n                                            {item.name}\n                                        </Link>\n                                    </Col>\n                                    <Col md={2}>\n                                        ${item.price}\n                                    </Col>\n                                    <Col md={2}>\n                                    <Form.Control as='select' value={item.qty} onChange = {(e) =>\n                                        dispatch(addToCart(item.product, Number(e.target.value)))\n                                        }>\n                                            {[...Array(item.countInStock).keys()].map(x => (\n                                                <option key={x+1} value={x+1}>\n                                                    {x+1}\n                                                </option>\n\n                                            ))}\n                                        </Form.Control>\n                                    </Col>\n                                    <Col md={2}>\n                                        <Button type='button' variant='light' onClick ={() => removeFromCartHandler(item.product)}>\n                                            <i className='fas fa-trash'>\n\n                                            </i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>\n                                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                                items \n                            </h2>\n                            ${cartItems\n                                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                                .toFixed(2)}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button \n                                type='button' \n                                className='btn-block' \n                                disabled={cartItems.length === 0}\n                                onClick={checkoutHandler}>\n                                    Proceed To Checkout\n                                </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n            <Col md={2}>\n\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\n\nconst LoginScreen = ({ location, history }) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, error, userInfo } = userLogin\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        //DISPATCH LOGIN\n        dispatch(login(email, password))\n    }\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control \n                        type='email' \n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n                \n                \n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control \n                        type='password' \n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}`\n                    : '/register'}>Register</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\n\nconst RegisterScreen = ({ location, history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { loading, error, userInfo } = userRegister\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword){\n            setMessage('Passwords do not match')\n        }else {\n            //DISPATCH REGISTER\n            dispatch(register(name, email, password))\n        }\n        \n       \n    }\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control \n                        type='name' \n                        placeholder='Enter Name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control \n                        type='email' \n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n                \n                \n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control \n                        type='password' \n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control \n                        type='password' \n                        placeholder='Confirm password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link to={redirect ? `/login?redirect=${redirect}`\n                    : '/login'}>Login</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      //DISPATCH UPDATE PROFILE\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Enter Name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter Email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='confirmPassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Confirm password'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button variant='light'>Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n} from '../constants/orderConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        //we don't need content type for get request\n        // 'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAdress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAdress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter Address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n        </Form.Group>\n        <Col>\n          <Form.Check\n            type='radio'\n            label='PayPal or Credit Card'\n            id='PayPal'\n            name='paymentMethod'\n            value='PayPal'\n            checked\n            onChange={(e) => setPaymentMethod(e.target.value)}\n          ></Form.Check>\n          {/* <Form.Check\n            type='radio'\n            label='Stripe'\n            id='Stripe'\n            name='paymentMethod'\n            value='Stripe'\n            onChange={(e) => setPaymentMethod(e.target.value)}\n          ></Form.Check> */}\n        </Col>\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  //Calculate Prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n  //Items\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n\n  //Shipping\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n\n  //Tax\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n\n  //Total Price\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your Cart Is Empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x {item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>\n                    <h5>Total</h5>\n                  </Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    //Calculate Prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n    //Items\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver, userInfo, history])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong>\n                {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered!</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not paid!</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Your order Is Empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x {item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>\n                    <h5>Total</h5>\n                  </Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n\n              {loadingDeliver && <Loader />}\n\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      classname='btn btn-block'\n                      onclick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/login')\n    }\n    dispatch(listUsers())\n  }, [dispatch, history, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [user, dispatch, history, userId, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter Name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter Email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo.isAdmin) {\n      history.push('/login')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      //DELETE PRODUCTS\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    //Create product\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i>Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updpateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [brand, setBrand] = useState('')\n  const [image, setImage] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setBrand(product.brand)\n        setImage(product.image)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uplaodFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n      const { data } = await axios.post('/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    //update product\n    dispatch(\n      updpateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter Name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter Price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uplaodFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store.js'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}